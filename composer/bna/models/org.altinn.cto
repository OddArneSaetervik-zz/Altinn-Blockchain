/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

namespace org.altinn

participant StockOwner identified by id {
    o String id
    o String socialSecurityNr
    o String name
    o ResponseRequest[] pendingRequests
    o ResponseRequest[] receivedPurchaseRequests
}

participant Company identified by orgnr {
    o String orgnr
    o String companyName
    o ResponseRequest[] awaitingStockPurchase
    o ResponseRequest[] establishCompanyRequest
    o ResponseRequest[] changeOnCompanyRequest
}

participant BusinessRegistry identified by id {
  o String id
  o ResponseRequest[] receivedEstablishCompanyRequest
  o ResponseRequest[] receivedChangeOnCompanyRequest
}

participant Journalist identified by socialSecurityNr {
  o String socialSecurityNr
}

participant Offentlig identified by id {
  o String id
}

asset RegisterOfShareholders identified by orgnr {
    o String orgnr
    o Double numberOfShares
    o Double capital
    o Double firstDenomination
    o Boolean approved
      --> Company belongsTo
}

asset Stock identified by id {
  o String id
  o String type
    o Double denomination
  o Double value
  o Double marketValue
  o DateTime purchasedDate
    --> RegisterOfShareholders registerOfShareholders
    --> StockOwner owner
}

transaction RegisterCompany {
  o Double capital
  o Integer numberOfStock
  o Integer[] distribution
  o String companyIdentifier
  o String[] newStockOwners
}

transaction CreateCompany {
  o String IdToTransactionWithEvent
  o RequestResponse response
}

transaction RegisterChangeOnCompany {
  o CapitalChange capitalChange
  o Double newCapital
  o Integer amountOfNewStocks
  o String shareholderRegistryID
}

transaction ExpandCapital {
  o String IdToTransactionWithEvent
  o RequestResponse response
}

transaction AddStocks {
  o String IdToTransactionWithEvent
  o RequestResponse response
}

//pointless?
transaction ChangeStockValue {
  o Double newValue
  o String registerOfShareholders
}

transaction RequestPurchase {
  o Double bid
  o Integer quantity
  o String customer
  o String stockOwner
  o String registerOfShareholders
}

transaction RespondToPurchaseRequest {
  o String transID
  o RequestResponse response
}

transaction SaleOfStock {
  o String transID
  o RequestResponse response
}

event NewCompanyRegistered {
  o Double capital
  o Integer numberOfStock
  o Integer[] distribution
  --> Company company
  --> StockOwner[] newStockOwners
  o String IdToTransactionWithEvent
}

event ChangeOnCompanyRegistered {
  o CapitalChange capitalChange
  o Double newCapital
  o Integer amountOfNewStocks
  o String shareholderRegistryID
}

event StockPurchaseRequest {
    o Double bid
    o Integer quantity
    o String stockOwner
    o String customer
    o String registerOfShareholders
}

event StockChangedValue {
	o Double oldValue
  o Double newValue
  o String message
  --> Stock stock
}

event StockSale {
	o String message
  o Double bid
  o Integer quantity
  o DateTime date
  --> StockOwner newOwner
}

concept ResponseRequest {
  o String IdToTransactionWithEvent
  o RequestResponse response
}

enum RequestResponse {
  o PENDING
  o REJECTED
  o ACCEPTED
  o WITHDRAWN
}

enum CapitalChange {
  o CHANGEVALUE
  o CHANGEAMOUNT
}

abstract participant User identified by userID {
  o String userID
  o String firstName
  o String lastName
}

participant SampleParticipant extends User {
}

transaction CreateStockOwner {
  o StockOwner stockOwner
}

transaction CreateSampleParticipant {
  o SampleParticipant sampleParticipant
}
